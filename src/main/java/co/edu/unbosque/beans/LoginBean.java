package co.edu.unbosque.beans;

import co.edu.unbosque.model.Usuario;
import co.edu.unbosque.service.UsuarioService;
import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Inject;
import jakarta.inject.Named;

/**
 * Administra el proceso de inicio de sesi칩n de usuarios.
 * Valida las credenciales del usuario utilizando el servicio UsuarioService y gestiona
 * la sesi칩n del usuario, mostrando mensajes de 칠xito o error seg칰n corresponda.
 * @author David Santiago Ramirez Arevalo
 */
@Named("loginBean")
@RequestScoped
public class LoginBean {

    private String username;
    private String password;

    @Inject
    private UsuarioService usuarioService;

    /**
     * Valida las credenciales del usuario y gestiona el inicio de sesi칩n.
     * Si las credenciales son correctas, almacena el nombre de usuario y el objeto usuario
     * en la sesi칩n y redirige a la p치gina principal. Si son incorrectas, muestra un mensaje de error.
     * @return La URL de redirecci칩n a la p치gina principal si el inicio de sesi칩n es exitoso, o null si falla
     */
    public String login() {
        Usuario usuarioEncontrado = usuarioService.validarCredenciales(username, password);
        if (usuarioEncontrado != null) {
            FacesContext.getCurrentInstance().getExternalContext()
                .getSessionMap().put("usuarioLogueado", username);
            FacesContext.getCurrentInstance().getExternalContext()
                .getSessionMap().put("usuarioActual", usuarioEncontrado);
            FacesContext.getCurrentInstance().addMessage(null,
                new FacesMessage(FacesMessage.SEVERITY_INFO,
                    "춰Bienvenido, " + usuarioEncontrado.getNombre() + "游눙!", null));
            return "index?faces-redirect=true";
        } else {
            FacesContext.getCurrentInstance().addMessage(null,
                new FacesMessage(FacesMessage.SEVERITY_ERROR,
                    "Usuario o contrase침a incorrectos游놐", null));
            return null;
        }
    }

    /**
     * Obtiene el nombre de usuario.
     * @return El nombre de usuario
     */
    public String getUsername() {
        return username;
    }

    /**
     * Establece el nombre de usuario.
     * @param username El nombre de usuario a establecer
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Obtiene la contrase침a del usuario.
     * @return La contrase침a
     */
    public String getPassword() {
        return password;
    }

    /**
     * Establece la contrase침a del usuario.
     * @param password La contrase침a a establecer
     */
    public void setPassword(String password) {
        this.password = password;
    }
}